#!/bin/bash

# outbound transport queue arguments
# --outbound-queue-class, -oqc : to decide whether Redis or Kafka delivery agents be setup
# --outbound-queue, -oq
# --outbound-queue-prefix , -oqp
# inbound transport queue arguments
# --inbound-queue-class, -iqp : to decide whether Redis or Kafka delivery agents be setup
# --inbound-queue, -iq
# --inbound-queue-prefix, -iqp
# --inbound-queue-transport, -iqt
cd "$(dirname "$0")" || exit 1
inboundQueueArgs=()
outboundQueueArgs=()
ACAPY_RAND_NAME=""
ACAPY_NETWORK_NAME=""
ENABLE_REDIS_INBOUND=0
ENABLE_KAFKA_INBOUND=0
ENABLE_REDIS_OUTBOUND=0
ENABLE_KAFKA_OUTBOUND=0
REDIS_INBOUND_CLASS_KEYWORD="RedisInboundQueue"
KAFKA_INBOUND_CLASS_KEYWORD="KafkaInboundQueue"
REDIS_OUTBOUND_CLASS_KEYWORD="RedisOutboundQueue"
KAFKA_OUTBOUND_CLASS_KEYWORD="KafkaOutboundQueue"
declare -a acapyArgs=($@)
for (( i = 0; i < ${#acapyArgs[*]}; ++ i ))
do
  	# outbound transport queue
	if [[ "${acapyArgs[$i]}" == "--outbound-queue-class" || "${acapyArgs[$i]}" == "-oqc" ]]; then
		if echo "${acapyArgs[$i+1]}" | grep -q "$REDIS_OUTBOUND_CLASS_KEYWORD"; then
			ENABLE_REDIS_OUTBOUND=1
			ENABLE_KAFKA_OUTBOUND=0
		fi
		if echo "${acapyArgs[$i+1]}" | grep -q "$KAFKA_OUTBOUND_CLASS_KEYWORD"; then
			ENABLE_REDIS_OUTBOUND=0
			ENABLE_KAFKA_OUTBOUND=1
		fi
	fi
	if [[ "${acapyArgs[$i]}" == "--outbound-queue" || "${acapyArgs[$i]}" == "-oq" ]]; then
		outboundQueueArgs+=("${acapyArgs[$i]}")
		outboundQueueArgs+=("${acapyArgs[$i+1]}")
	fi
	if [[ "${acapyArgs[$i]}" == "--outbound-queue-prefix" || "${acapyArgs[$i]}" == "-oqp" ]]; then
		outboundQueueArgs+=("${acapyArgs[$i]}")
		outboundQueueArgs+=("${acapyArgs[$i+1]}")
	fi
	# inbound transport queue
	if [[ "${acapyArgs[$i]}" == "--inbound-queue-class" || "${acapyArgs[$i]}" == "-iqc" ]]; then
		if echo "${acapyArgs[$i+1]}" | grep -q "$REDIS_INBOUND_CLASS_KEYWORD"; then
			ENABLE_REDIS_INBOUND=1
			ENABLE_KAFKA_INBOUND=0
		fi
		if echo "${acapyArgs[$i+1]}" | grep -q "$KAFKA_INBOUND_CLASS_KEYWORD"; then
			ENABLE_REDIS_INBOUND=0
			ENABLE_KAFKA_INBOUND=1
		fi
	fi
	if [[ "${acapyArgs[$i]}" == "--inbound-queue" || "${acapyArgs[$i]}" == "-iq" ]]; then
		inboundQueueArgs+=("${acapyArgs[$i]}")
		inboundQueueArgs+=("${acapyArgs[$i+1]}")
	fi
	if [[ "${acapyArgs[$i]}" == "--inbound-queue-prefix" || "${acapyArgs[$i]}" == "-iqp" ]]; then
		inboundQueueArgs+=("${acapyArgs[$i]}")
		inboundQueueArgs+=("${acapyArgs[$i+1]}")
	fi
	if [[ "${acapyArgs[$i]}" == "--inbound-queue-transport" || "${acapyArgs[$i]}" == "-iqt" ]]; then
		inboundQueueArgs+=("${acapyArgs[$i]}")
		inboundQueueArgs+=("${acapyArgs[$i+1]}")
		inboundQueueArgs+=("${acapyArgs[$i+2]}")
		inboundQueueArgs+=("${acapyArgs[$i+3]}")
	fi
	if [[ "${acapyArgs[$i]}" == "--plugin-config" ]]; then
		inboundQueueArgs+=("${acapyArgs[$i]}")
		inboundQueueArgs+=("${acapyArgs[$i+1]}")
		outboundQueueArgs+=("${acapyArgs[$i]}")
		outboundQueueArgs+=("${acapyArgs[$i+1]}")
	fi
done
ACAPY_NETWORK_NAME="${ACAPY_DOCKER_NETWORK}"
RAND_NAME=$(env LC_ALL=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 16 | head -n 1)
if [[ "$ENABLE_REDIS_INBOUND" == 1 ]]; then
	echo "Starting Redis Inbound Message Service."
	if [ -z "$ACAPY_DOCKER_NETWORK" ]; then
		. ../delivery_service/redis/inbound/scripts/run.sh ${inboundQueueArgs[@]} rand-name $RAND_NAME
  	else
		. ../delivery_service/redis/inbound/scripts/run.sh ${inboundQueueArgs[@]} rand-name $RAND_NAME network-name $ACAPY_NETWORK_NAME
  	fi
fi
if [[ "$ENABLE_KAFKA_INBOUND" == 1 ]]; then
  if [ -z "$ACAPY_DOCKER_NETWORK" ]; then
	echo "Invalid ACAPY_DOCKER_NETWORK ${ACAPY_DOCKER_NETWORK} specified!"
    exit 1
  fi
  echo "Starting Kafka Inbound Message Service."
  . ../delivery_service/kafka/inbound/scripts/run.sh ${inboundQueueArgs[@]} rand-name $RAND_NAME network-name $ACAPY_NETWORK_NAME
fi
if [[ "$ENABLE_REDIS_OUTBOUND" == 1 ]]; then
  	echo "Starting Redis Outbound Message Service."
	if [ -z "$ACAPY_DOCKER_NETWORK" ]; then
  		. ../delivery_service/redis/outbound/scripts/run.sh ${outboundQueueArgs[@]} rand-name $RAND_NAME
  	else
  		. ../delivery_service/redis/outbound/scripts/run.sh ${outboundQueueArgs[@]} rand-name $RAND_NAME network-name $ACAPY_NETWORK_NAME
  	fi
fi
if [[ $ENABLE_KAFKA_OUTBOUND = 1 ]]; then
  if [ -z "$ACAPY_DOCKER_NETWORK" ]; then
	echo "Invalid ACAPY_DOCKER_NETWORK ${ACAPY_DOCKER_NETWORK} specified!"
    exit 1
  fi
  echo "Starting Kafka Outbound Message Service."
  . ../delivery_service/kafka/outbound/scripts/run.sh ${outboundQueueArgs[@]} rand-name $RAND_NAME network-name $ACAPY_NETWORK_NAME
fi
